{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","className","href","email","name","TodoInfo","todo","id","completed","title","classNames","TodoList","todos","map","username","GlobalStyles","createGlobalStyle","styleReset","getUserById","userId","usersFromServer","find","App","useState","newTodos","setNewTodos","newUserId","setNewUserId","newTodoName","setNewTodoName","hasUserError","setHasUserError","hasTodoNameError","setHasTodoNameError","theme","original","resizable","onSubmit","event","preventDefault","newTodo","length","previousGoods","addNewTodo","type","placeholder","value","onChange","target","disabled","currentUser","fullWidth","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a1a35de6.chunk.js","sourcesContent":["import { User } from '../../types/User';\n\ntype Props = {\n  user: User | null;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <div className=\"UserInfo\">\n      {user && (\n        <a className=\"UserInfo__email\" href={`mailto:${user.email}`}>\n          {user.name}\n        </a>\n      )}\n    </div>\n  );\n};\n","import classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo/UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    completed,\n    title,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames(\n        'TodoInfo', { 'TodoInfo--completed': completed },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      <UserInfo user={user} />\n    </article>\n  );\n};\n","import { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map((todo) => {\n        return <TodoInfo todo={todo} />;\n      })}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import original from 'react95/dist/themes/original';\nimport { useState } from 'react';\nimport './App.scss';\n\nimport {\n  styleReset,\n  Button,\n  Window,\n  WindowHeader,\n  WindowContent,\n} from 'react95';\n\nimport { createGlobalStyle, ThemeProvider } from 'styled-components';\n\n/* Pick a theme of your choice */\n\nimport { TodoList } from './components/TodoList';\n\n// api\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\n// types\nimport { Todo } from './types/Todo';\nimport { User } from './types/User';\n\nconst GlobalStyles = createGlobalStyle`\n  ${styleReset}\n  @font-face {\n    font-family: 'ms_sans_serif';\n    font-weight: 400;\n    font-style: normal\n  }\n  @font-face {\n    font-family: 'ms_sans_serif';\n    font-weight: bold;\n    font-style: normal\n  }\n  body, input, select, textarea {\n    font-family: 'ms_sans_serif';\n  }\n`;\n\nfunction getUserById(userId: number): User | null {\n  return usersFromServer.find((user) => user.id === userId)\n  || null;\n}\n\nconst todos: Todo[] = todosFromServer.map((todo) => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport const App = () => {\n  const [newTodos, setNewTodos] = useState<Todo[]>(todos);\n  const [newUserId, setNewUserId] = useState(0);\n  const [newTodoName, setNewTodoName] = useState('');\n  const [hasUserError, setHasUserError] = useState(false);\n  const [hasTodoNameError, setHasTodoNameError] = useState(false);\n\n  const handleReset = () => {\n    setNewUserId(0);\n    setNewTodoName('');\n  };\n\n  const addNewTodo = (title: string, userId: number) => {\n    const newTodo: Todo = {\n      id: newTodos.length + 1,\n      title,\n      completed: false,\n      userId,\n      user: getUserById(userId),\n    };\n\n    setNewTodos((previousGoods) => [...previousGoods, newTodo]);\n  };\n\n  const handleFormSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (newTodoName && newUserId) {\n      addNewTodo(newTodoName, newUserId);\n      handleReset();\n    }\n\n    setHasUserError(!newUserId);\n    setHasTodoNameError(!newTodoName);\n  };\n\n  return (\n    <>\n      <GlobalStyles />\n      <ThemeProvider theme={original}>\n        <Window resizable className=\"window\">\n          <WindowHeader className=\"window-title\">\n            <span>Add todo form</span>\n          </WindowHeader>\n          <WindowContent>\n            <div className=\"App\">\n              <form onSubmit={handleFormSubmit}>\n                <div className=\"field\">\n                  <input\n                    type=\"text\"\n                    data-cy=\"titleInput\"\n                    placeholder=\"Enter a title\"\n                    value={newTodoName}\n                    onChange={(event) => {\n                      setNewTodoName(event.target.value);\n                    }}\n                  />\n\n                  {hasTodoNameError\n                    && <span className=\"error\">Please enter a title</span>}\n                </div>\n\n                <div className=\"field\">\n                  <select\n                    data-cy=\"userSelect\"\n                    value={newUserId}\n                    onChange={(event) => setNewUserId(+event.target.value)}\n                  >\n                    <option key={0} value={0} disabled>\n                      Choose a user\n                    </option>\n                    {usersFromServer.map((currentUser) => (\n                      <option key={currentUser.id} value={currentUser.id}>\n                        {currentUser.name}\n                      </option>\n                    ))}\n                  </select>\n\n                  {hasUserError\n                    && <span className=\"error\">Please choose a user</span>}\n                </div>\n\n                <Button\n                  fullWidth\n                  type=\"submit\"\n                  data-cy=\"submitButton\"\n                >\n                  Add\n                </Button>\n              </form>\n\n              <TodoList todos={newTodos} />\n            </div>\n          </WindowContent>\n        </Window>\n      </ThemeProvider>\n    </>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}